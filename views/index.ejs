
<!DOCTYPE html>
<html style = "background-color:rgba(0,0,0,0.2)" onclick = "on_click()">
  <head>
    <script src = "js/lib/jquery-1.11.2.min.js"></script>
    <script src = "js/lib/autosize.min.js"></script>
    <script src = "js/lib/utility.js"></script>
    <script src = "js/lib/sketchcanvas.js"></script>
    <script src = "js/lib/floatingcanvas.js"></script>
    <script src = "https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/jquery-ui.min.js"></script>
    <script src = "https://cdn.socket.io/socket.io-1.2.0.js"></script>
    <link rel = "stylesheet" href="https://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" />

    <style type = "text/css">
      textarea{resize : none; text-align: center;}
      *{margin : 0; padding : 0;}
    </style>
  </head>
  <body>
    <script type = "text/javascript">

      var issue;
      var issue_tree = [];
      var socket = io();                                                        
      var focused_canvas;

      PostingDiv.init($(window).width() / 2, $(window).height() / 2, "#c0ffee");

      function on_click(){
        if(window.noclick){window.noclick = false; return;}
        switch(PostingDiv.state){
          case "active":
            PostingDiv.clear(500); break;
          case "inactive":
            PostingDiv.display(500); break;
        }
      }
      $(document).bind("contextmenu", function(e){
        if(window.noclick){window.noclick = false; return false;}
        transit(issue_tree[issue_tree.length - 2]);
        return false;
      });

      function transit(new_issue){
        PostingDiv.clear(500);
        if( ! new_issue){return;}
        issue = new_issue;
        issue_tree.push(issue);
        while(issue_tree.indexOf(issue) + 1 < issue_tree.length){
          issue_tree.pop();
        }
        FloatingDivList.clear();
        //socket.emit("init_bord", issue);
        refresh_bord();
      }
      socket.on('transit', function(new_issue){
        transit(new_issue);
      });
      socket.on('add_idea', function(idea){
        add_idea(idea);
      });
      socket.on('delete_floating_canvas', function(idea_id){
        fc = FloatingDivList.find_by_id(idea_id);
        if(fc){FloatingDivList.remove(fc);}
      });

      function focus_on(canvas){
        focused_canvas = canvas;
        focused_canvas.focus_on();
      }
      function focus_out(){
        if( ! focused_canvas){return;}
        focused_canvas.focus_out();
        focused_canvas = null;
      }

      function refresh_bord(){
        var current_id_list = FloatingDivList.get_id_list();
        socket.emit("update", current_id_list, issue);
      }
      
      setInterval("refresh_bord()", 10000);
    </script>
  </body>
</html>

